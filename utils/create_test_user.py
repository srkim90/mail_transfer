import json

import requests


def make_noti_off_data() -> bytes:
    result: str = '''
        {"mailNotiModel":{"events":[{"event":"mail.arrived","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["all"]},{"event":"mail.shared","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["shared.user"]}]},"boardNotiModel":{"events":[{"event":"board.post.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator"]},{"event":"board.post.changed","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"board.reply.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator","origin.creator"]},{"event":"board.post.reply.changed","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":["creator","origin.creator"]},{"event":"board.comment.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator","comment.creator"]},{"event":"board.post.recommended","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator"]}]},"communityNotiModel":{"events":[{"event":"community.member.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["master"]},{"event":"community.apply.to.join","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["master"]},{"event":"community.request","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["siteadmin"]},{"event":"community.post.added","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["creator"]},{"event":"community.post.changed","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"community.reply.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator","origin.creator"]},{"event":"community.post.reply.changed","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":["creator","origin.creator"]},{"event":"community.comment.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator","comment.creator"]},{"event":"community.post.recommended","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator"]}]},"todoNotiModel":{"events":[{"event":"todo.member.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager"]},{"event":"todo.item.moved","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["director"]},{"event":"todo.director.changed","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["director"]},{"event":"todo.item.comment.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["director","comment.creator"]},{"event":"todo.item.attach.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["director"]},{"event":"todo.item.checklist.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["director"]},{"event":"todo.item.checklist.completed","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["director"]},{"event":"todo.item.added","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]}]},"calendarNotiModel":{"events":[{"event":"calendar.company.event.added","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["attendee"]},{"event":"calendar.event.created","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["attendee"]},{"event":"calendar.event.updated","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["attendee"]},{"event":"calendar.follow.requested","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["requested.calendar.owner"]},{"event":"calendar.follow.request.accepted","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["follower"]},{"event":"calendar.follow.request.denied","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["follower"]},{"event":"calendar.event.reminder","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["attendee"]},{"event":"calendar.event.commented","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["attendee","comment.creator"]}]},"worksNotiModel":{"events":[{"event":"applet.doc.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager","data.added.user"]},{"event":"applet.doc.status.changed","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager.setting"]},{"event":"applet.doc.edited","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager.setting"]},{"event":"applet.activity.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["data.added.user","creator"]},{"event":"applet.activity.edited","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"applet.comment.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["data.added.user","creator","activity.creator","comment.creator"]},{"event":"applet.integration.requested","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":[]},{"event":"applet.integration.accepted","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":[]}]},"surveyNotiModel":{"events":[{"event":"survey.progress","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["respondent","referrer"]},{"event":"survey.none.temp.respondent","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["norespondent"]},{"event":"survey.comment.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["creator"]}]},"reportNotiModel":{"events":[{"event":"report.reporter.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["reporter"]},{"event":"report.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager"]},{"event":"report.changed","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"report.series.comment.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager","report.recipient","comment.creator"]},{"event":"report.comment.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager","comment.creator"]},{"event":"report.referrer.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["referrer"]},{"event":"report.manager.added","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["manager"]}]},"approvalNotiModel":{"events":[{"event":"document.arrived","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["wait.approval","wait.agreement","wait.check","wait.inspection","wait.deputy"]},{"event":"document.withdrew","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["wait.approval","wait.agreement","wait.check","wait.inspection","wait.deputy"]},{"event":"document.returned","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["drafter","approval","agreement","check","inspection","referrer"]},{"event":"document.previous.returned","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["approval","agreement","check","inspection"]},{"event":"document.completed","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["drafter","referrer","reader"]},{"event":"document.commented","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["drafter","approval","agreement","check","inspection","referrer","reader"]},{"event":"document.reading.reader.added","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["add.reader"]},{"event":"document.referrence.reader.added","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["add.referrer"]},{"event":"document.received","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["dept.folder.director","master","receiver"]},{"event":"document.receiver.changed","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["receiver"]},{"event":"document.received.returned","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["origin.drafter"]}]},"assetNotiModel":{"events":[{"event":"asset.reserve.added","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"asset.reserve.changed","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"asset.reserve.canceled","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"asset.rent.added","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"asset.rent.canceled","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"asset.manager.added","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["add.manager"]}]},"docsNotiModel":{"events":[{"event":"docs.added","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"docs.updated","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"docs.approval.request","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["manager"]},{"event":"docs.approval.request.canceled","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["manager"]},{"event":"docs.approved","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["requester"]},{"event":"docs.rejected","useWebPush":true,"useMobilePush":true,"useMail":true,"targets":["requester"]}]},"webfolderNotiModel":{"events":[{"event":"webfolder.added","useWebPush":false,"useMobilePush":false,"useMail":false,"targets":[]},{"event":"webfolder.shared","useWebPush":true,"useMobilePush":false,"useMail":true,"targets":["shared.user"]}]},"taskNotiModel":{},"ehrNotiModel":{"events":[{"event":"ehr.day","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["ehr.clockin","ehr.clockout","ehr.rest.time","ehr.auto.clockout.push"]},{"event":"ehr.week","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["ehr.overtime.40.before","ehr.overtime.40.after","ehr.overtime.52.before","ehr.overtime.52.after"]},{"event":"ehr.month","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["ehr.overtime.month.min.before","ehr.overtime.month.min.after","ehr.overtime.month.max.before","ehr.overtime.month.max.after"]},{"event":"ehr.timeline.admin","useWebPush":true,"useMobilePush":true,"useMail":false,"targets":["ehr.timeline.admin.push"]}]},"channelNotiModel":{},"webNotiSetting":{"useMailNoti":false,"useBoardNoti":true,"useCommunityNoti":true,"useTodoNoti":true,"useCalendarNoti":true,"useWorksNoti":true,"useSurveyNoti":true,"useReportNoti":true,"useApprovalNoti":true,"useAssetNoti":true,"useDocsNoti":true,"useWebfolderNoti":true,"useTaskNoti":true,"useEhrNoti":true,"useChannelNoti":true,"usePush":true},"mobileNotiSetting":{"useMailNoti":false,"useBoardNoti":true,"useCommunityNoti":true,"useTodoNoti":true,"useCalendarNoti":true,"useWorksNoti":true,"useSurveyNoti":true,"useReportNoti":true,"useApprovalNoti":true,"useAssetNoti":true,"useDocsNoti":true,"useWebfolderNoti":false,"useEhrNoti":true,"usePush":true,"usePushSetting":false,"timeZone":"+09:00"},"mailNotiSetting":{"useMailNoti":false,"useBoardNoti":true,"useCommunityNoti":true,"useTodoNoti":true,"useCalendarNoti":true,"useWorksNoti":true,"useSurveyNoti":true,"useReportNoti":true,"useApprovalNoti":true,"useAssetNoti":true,"useDocsNoti":true,"useWebfolderNoti":true,"useTaskNoti":true,"useEhrNoti":false,"useChannelNoti":true,"usePush":true},"useMailNoti":false,"useBoardNoti":true,"useCommunityNoti":true,"useTodoNoti":true,"useCalendarNoti":true,"useWorksNoti":true,"useSurveyNoti":true,"useReportNoti":true,"useApprovalNoti":true,"useAssetNoti":true,"useDocsNoti":true,"useWebfolderNoti":true,"useTaskNoti":true,"useEhrNoti":false,"useChannelNoti":true,"usePush":true,"usePushSetting":false,"timeZone":"+09:00"}        
    '''
    return json.dumps(json.loads(result.encode('utf-8'))).encode('utf-8')

def make_data(user_name: str) -> bytes:
    result: str = '''
    {"name":"%s","loginId":"%s","password":"port2093@","positionId":"","gradeId":"","status":"online","employeeNumber":"","locale":"ko","mailGroup":"default","mailAddQuota":"0","quotaWarningMode":"","quotaWarningRatio":"90","quotaViolationAction":"","quotaOverlookRatio":"10","webFolderAddQuota":"0","forwardingUse":"","forwardingMode":"none","mailSenderUse":"","sendAllowMode":"group","maxSendMailCountUse":"group","maxSendMailCount":"100","inboxExpireDays":"none","trashExpireDays":"none","spamExpireDays":"none","approvalPassword":"","approvalLevel":"10","hiddenForwardingMode":"off","mailExpireDate":"","userVirtualDomains":"","repUserEmail":"%s@srkim.kr","directTel":"","mobileNo":"","webmailUsed":true,"popUsed":true,"imapUsed":true,"smtpAuthUsed":true,"additions":{"enName":"","jpName":"","zhcnName":"","zhtwName":"","viName":""},"groupMembers":[],"deptMembers":[{"deptId":16893}],"attPhoto":null,"approvalAttPhoto":null,"alternateAddr":[],"alternateUserDomain":[],"forwardingAddr":[],"sendAllowAddr":[],"hiddenForwardingAddr":[],"mailSenders":[],"configs":[{"name":"useAbbroadIpCheck","value":"fasle","valueType":"boolean"},{"name":"otpService","value":"false","valueType":"boolean"}],"birthday":"","lunarCal":false}
    ''' % (user_name, user_name, user_name)
    return json.dumps(json.loads(result.encode('utf-8'))).encode('utf-8')


def notify_off():
    domaion = "https://nstaging.daouoffice.com"
    for idx in range(1000, 2002):
        uid = "srkim%d" % (idx,)
        sess = requests.session()
        result = sess.post(domaion + "/api/login",
                           data=('{"username":"%s","password":"port2093@","captcha":"","returnUrl":""}'
                                 % (uid,)).encode('utf-8'),
                           headers={"Content-Type": "application/json"})
        data = make_noti_off_data()
        result = sess.post(domaion + "/api/user/notisetting", data=data, headers={"Content-Type": "application/json"})
        print("idx=%d, status: %d, result.text=" % (idx, result.status_code,))
    return

def create_users():
    domaion = "https://nstaging.daouoffice.com:8443"
    data = {}
    sess = requests.session()
    result = sess.post(domaion + "/go/ad/api/login",
                       data=b'{"username":"srkim1000","password":"port2093@","returnUrl":""}',
                       headers={"Content-Type": "application/json"})
    for idx in range(1000):
        data = make_data("srkim%d" % (1003+idx,))
        result = sess.post(domaion + "/go/ad/api/user", data=data, headers={"Content-Type": "application/json"})
        print("status: %d, result.text=\n%s" % (result.status_code, result.text))


if __name__ == "__main__":
    notify_off()
